#BlueJ class context
comment0.params=x\ y
comment0.target=Tablero(int,\ int)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Tablero\n\ \n\ @param\ x\ ancho\ del\ tablero.\n\ @param\ y\ alto\ del\ tablero.\n
comment1.params=
comment1.target=void\ reinicia()
comment1.text=\n\ Limpia\ el\ tablero.\n
comment10.params=
comment10.target=boolean\ colisionIzquierda()
comment10.text=\n\ Comprueba\ si\ avanzando\ hacia\ la\ izquierda\ se\ puede,\ comprobando\ las\ piezas\ que\ haya,\n\ y\ el\ borde\ del\ final\ del\ tablero\ por\ la\ izquierda.\n\ \n\ @return\ verdadero\ si\ hay\ colisi\u00F3n,\ falso\ en\ caso\ contrario.\n
comment11.params=
comment11.target=boolean\ colisionGiro()
comment11.text=\n\ Comprueba\ si\ al\ girar\ la\ pieza\ colisiona\ o\ no\ en\ el\ tablero,\ ya\ sea\ lateralmente,\n\ o\ hacia\ abajo.\n\ \n\ @return\ verdadero\ si\ colisiona,\ falso\ en\ caso\ contrario.\n
comment12.params=
comment12.target=void\ limpiaLineas()
comment12.text=\n\ Elimina\ del\ tablero\ las\ l\u00EDneas\ completas.\n
comment2.params=actual
comment2.target=void\ setPieza(Pieza)
comment2.text=\n\ Asigna\ la\ pieza\ activa.\n\ \n\ @param\ actual\ La\ pieza\ que\ se\ pasa\ por\ par\u00E1metro\ para\ asignar\ como\ activa.\n
comment3.params=
comment3.target=java.awt.Color[][]\ getTablero()
comment3.text=\n\ Genera\ el\ tablero\ a\ dibujar\ y\ lo\ retorna.\n\ \n\ @return\ el\ tablero\ a\ representar.\n
comment4.params=
comment4.target=void\ fijaPieza()
comment4.text=\n\ Se\ encarga\ de\ fijar\ la\ pieza\ al\ tablero.\n
comment5.params=tablero
comment5.target=void\ fijaPieza(java.awt.Color[][])
comment5.text=\n\ Fija\ la\ pieza\ en\ el\ tablero\ pasado\ como\ par\u00E1metro.\n\ \n\ @param\ tablero\ El\ tablero\ en\ el\ que\ fijar\ la\ pieza\ actual.\n
comment6.params=x\ y
comment6.target=void\ desplazaPieza(int,\ int)
comment6.text=\n\ Desplaza\ la\ pieza\ de\ forma\ relativa\ a\ su\ posici\u00F3n\ actual,\n\ con\ lo\ que\ se\ pueden\ dar\ valores\ positivos,\ negativos,\ \n\ o\ cero\ si\ no\ se\ desea\ desplazar.\n\ \n\ @param\ x\ desplazamiento\ en\ el\ eje\ horizontal.\n\ @param\ y\ desplazamiento\ en\ el\ eje\ vertical.\n
comment7.params=
comment7.target=void\ rotarPieza()
comment7.text=\n\ Rota\ la\ pieza\ actual.\n
comment8.params=
comment8.target=boolean\ colisionAbajo()
comment8.text=\n\ Comprueba\ si\ la\ pieza\ puede\ desplazarse\ hacia\ abajo\ sin\ colisionar,\ y\n\ sin\ salirse,\ por\ abajo,\ del\ tablero.\n\ \n\ @return\ verdadero\ si\ la\ pieza\ colisiona\ y\ falso\ si\ no.\n
comment9.params=
comment9.target=boolean\ colisionDerecha()
comment9.text=\n\ Comprueba\ si\ avanzando\ hacia\ la\ derecha\ se\ puede,\ comprobando\ las\ piezas\ que\ haya,\n\ y\ el\ borde\ del\ final\ del\ tablero\ por\ la\ derecha.\n\ \n\ @return\ verdadero\ si\ hay\ colisi\u00F3n,\ falso\ en\ caso\ contrario.\n
numComments=13
